#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef LINKAAPIKIT_SWIFT_H
#define LINKAAPIKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LinkaAPIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AudioSetting, open) {
  AudioSettingOff = 0,
  AudioSettingOn = 3,
  AudioSettingSiren2 = 4,
  AudioSettingSiren3 = 5,
  AudioSettingSiren_only = 1,
  AudioSettingTones_only = 2,
  AudioSettingNone = -1,
};


SWIFT_CLASS("_TtC11LinkaAPIKit21ConfigurationSettings")
@interface ConfigurationSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, ErrorKeyfobAssign, open) {
  ErrorKeyfobAssignERROR_KEYFOB_INVALID = 21,
  ErrorKeyfobAssignERROR_KEYFOB_INTERNET = 23,
  ErrorKeyfobAssignERROR_KEYFOB_NOT_CONNECTED = 24,
};

typedef SWIFT_ENUM(NSUInteger, ErrorOther, open) {
  ErrorOtherERROR_LOCK_FACTORY_RESET = 11,
  ErrorOtherERROR_LOCK_KEY_ISSUE = 12,
};


SWIFT_PROTOCOL("_TtP11LinkaAPIKit20FactoryResetDelegate_")
@protocol FactoryResetDelegate
- (void)onFactoryResetComplete;
- (void)onFactoryResetErrorWithErrorCode:(NSInteger)errorCode;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit7Helpers")
@interface Helpers : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit15KeychainService")
@interface KeychainService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11LinkaAPIKit20KeyfobAssignDelegate_")
@protocol KeyfobAssignDelegate
- (void)onKeyfobAssignComplete;
- (void)onKeyfobAssignErrorWithErrorCode:(enum ErrorKeyfobAssign)errorCode;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit15LinkaAPIService")
@interface LinkaAPIService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CBPeripheral;
@class CBCharacteristic;
@class CBCentralManager;
@class NSString;
@class NSNumber;
@class CBService;

SWIFT_CLASS("_TtC11LinkaAPIKit22LinkaBLECentralManager")
@interface LinkaBLECentralManager : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central willRestoreState:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didReadRSSI:(NSNumber * _Nonnull)RSSI error:(NSError * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LockStatusPacket;
@class NSError;
@class LockSettingPacket;
@class LockContextPacket;
@class LockInfoPacket;
@class UIView;

SWIFT_CLASS("_TtC11LinkaAPIKit28LinkaBLECommunicationManager")
@interface LinkaBLECommunicationManager : NSObject <CLLocationManagerDelegate>
- (double)getFwVersionNumber SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) CBPeripheral * _Null_unspecified peripheral;
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockStatusPacket_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockSettingPacket_API)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockContextPacket_API)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockInfoPacket_API)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockTamperWarning_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryLowWarning_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryCriticallyLowWarning_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchFirmwareVersion_API)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onLockBlocked_API)(CBPeripheral * _Nonnull);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockStatusPacket)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockSettingPacket)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockContextPacket)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockInfoPacket)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockTamperWarning)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryLowWarning)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryCriticallyLowWarning)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onLockSettled)(void);
@property (nonatomic, copy) NSString * _Nonnull output;
@property (nonatomic) BOOL isButtonUsedForLocking;
@property (nonatomic) BOOL uptimePacketDidChange;
@property (nonatomic) BOOL isEncryptionCounterValid;
- (nonnull instancetype)initWithIsDebug:(BOOL)isDebug view:(UIView * _Null_unspecified)view OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsDebug:(BOOL)isDebug view:(UIView * _Null_unspecified)view masterKey:(NSArray<NSNumber *> * _Null_unspecified)masterKey keyIndex:(NSUInteger)keyIndex OBJC_DESIGNATED_INITIALIZER;
- (void)startCommunicationWithPeripheral:(CBPeripheral * _Nonnull)peripheral onFetchLockStatusPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockStatusPacket_API onFetchLockSettingPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable))onFetchLockSettingPacket_API onFetchLockContextPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable))onFetchLockContextPacket_API onFetchLockInfoPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable))onFetchLockInfoPacket_API onFetchLockTamperWarning_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockTamperWarning_API onFetchLockBatteryLowWarning_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryLowWarning_API onFetchLockBatteryCriticallyLowWarning_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryCriticallyLowWarning_API onFetchFirmwareVersion_API:(void (^ _Null_unspecified)(NSString * _Nonnull))onFetchFirmwareVersion_API onFetchLockStatusPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockStatusPacket onFetchLockSettingPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable))onFetchLockSettingPacket onFetchLockContextPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable))onFetchLockContextPacket onFetchLockInfoPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable))onFetchLockInfoPacket onFetchLockTamperWarning:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockTamperWarning onFetchLockBatteryLowWarning:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryLowWarning onFetchLockBatteryCriticallyLowWarning:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryCriticallyLowWarning onLockSettled:(void (^ _Null_unspecified)(void))onLockSettled;
- (void)stopCommunication;
- (BOOL)doAction_SetUnlockedBumpThresholdWithShouldAllowLockingMovement:(NSInteger)shouldAllowLockingMovement SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Bond SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Lock SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Unlock SWIFT_WARN_UNUSED_RESULT;
- (void)clearEncryptedPacketQueue;
- (BOOL)doAction_setTrackDurationWithDuration:(NSInteger)duration SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_setFactorySetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_readFactorySetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_StartTracking SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_StatePing SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_StopTracking SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_Off SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_Gps SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_Conn SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_On SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_SetupLte SWIFT_WARN_UNUSED_RESULT;
- (void)clearLog;
- (BOOL)doAction_DefaultSettings SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_FwUpg SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Authenticate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ReadAudioSetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doRead_GpsOffSetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ReadKeyfob SWIFT_WARN_UNUSED_RESULT;
- (void)doAction_WriteKeyfobWithKeyfob:(uint64_t)keyfob uuid0:(uint64_t)uuid0 uuid1:(uint64_t)uuid1 major:(NSInteger)major minor:(NSInteger)minor;
- (void)doReadOperatorSettings;
- (BOOL)doAction_WriteAudioSettingWithSetting:(NSInteger)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Tune SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Sleep SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ResetReboot SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetPasscode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPasscodeWithPasscode:(NSString * _Nonnull)passcode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetLockSleep SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLockSleepWithSleepSeconds:(NSString * _Nonnull)sleepSeconds SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetUnlockedDisconnectedSleep SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockedDisconnectedSleepWithSleepSeconds:(NSString * _Nonnull)sleepSeconds SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetTheftIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetTheftDurationWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLockIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLoopControlWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGnssModeWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGnssFilterWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetStatePingWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetFullGpsWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockBatteryWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLockBatteryWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetDisconnectedLockWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetNetworkCodeWithSetting:(NSInteger)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetIpAddressWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteCommandsWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetpowerButtonPingWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetTetherWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockedMovementWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockedDurationWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetMusicalTonesWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteConnectStartWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteConnectEndWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteConnectDowWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetMotorSpeedWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetModemTypeWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetVolumeWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGpsOffBatteryPercentWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetAssistNowWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodAIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodBIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodAStartWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodBStartWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetSleepBatteryWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetAutolockWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGeoblockWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetActuations SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_deleteAllBondsWithCallback:(BOOL (^ _Null_unspecified)(BOOL))callback SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_stop SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_siren SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_stopSiren SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_activate SWIFT_WARN_UNUSED_RESULT;
- (void)emptyEncryptedSettingsQueue;
- (void)processEncryptionSettingsQueue;
- (id _Nonnull)linka_delegate_instance SWIFT_WARN_UNUSED_RESULT;
- (void)onBLEPoweredOn;
- (void)onBLEPoweredOff;
- (void)onConnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onDisconnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onFailToConnectPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralObjectWithPeripheral:(CBPeripheral * _Nonnull)peripheral RSSI:(NSNumber * _Null_unspecified)RSSI error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralServicesWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onCreateNotificationForPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic isConnected:(BOOL)isConnected;
- (void)onRefreshPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LinkaAPIKit22LinkaBLEConnectManager")
@interface LinkaBLEConnectManager : NSObject
@property (nonatomic, strong) CBPeripheral * _Null_unspecified peripheral;
@property (nonatomic, strong) LinkaBLECentralManager * _Null_unspecified manager;
@property (nonatomic, copy) void (^ _Null_unspecified callback_API)(CBPeripheral * _Nonnull, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnLostConnection_API)(CBPeripheral * _Nonnull, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnReadRSSI_API)(CBPeripheral * _Nonnull, NSNumber * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnLostConnection)(CBPeripheral * _Nonnull, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnReadRSSI)(CBPeripheral * _Nonnull, NSNumber * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callback)(CBPeripheral * _Nonnull, NSError * _Nullable);
- (void)startConnectWithPeripheral:(CBPeripheral * _Nonnull)peripheral callback:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, NSError * _Nullable))callback callbackOnLostConnection:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, NSError * _Nullable))callbackOnLostConnection callbackOnReadRSSI:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, NSNumber * _Nullable))callbackOnReadRSSI;
- (void)startDisconnectWithPeripheral:(CBPeripheral * _Nonnull)peripheral callback:(void (^ _Nonnull)(CBPeripheral * _Nonnull, NSError * _Nullable))callback;
- (void)stopCommunication;
- (void)kill;
- (void)startRoutine;
- (void)nextRoutine;
- (BOOL)connect SWIFT_WARN_UNUSED_RESULT;
- (BOOL)discoverServices SWIFT_WARN_UNUSED_RESULT;
- (BOOL)discoverCharacteristics SWIFT_WARN_UNUSED_RESULT;
- (BOOL)readRSSI SWIFT_WARN_UNUSED_RESULT;
- (BOOL)disconnect SWIFT_WARN_UNUSED_RESULT;
- (void)done;
- (id _Nonnull)linka_delegate_instance SWIFT_WARN_UNUSED_RESULT;
- (void)onBLEPoweredOn;
- (void)onBLEPoweredOff;
- (void)onConnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onDisconnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onFailToConnectPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralObjectWithPeripheral:(CBPeripheral * _Nonnull)peripheral RSSI:(NSNumber * _Null_unspecified)RSSI error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralServicesWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onCreateNotificationForPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic isConnected:(BOOL)isConnected;
- (void)onRefreshPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit24LinkaBLEPairingUpManager")
@interface LinkaBLEPairingUpManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LockController;
@class CLLocationManager;

SWIFT_CLASS("_TtC11LinkaAPIKit23LinkaMerchantAPIService")
@interface LinkaMerchantAPIService : NSObject
+ (void)saveAccessToken:(NSString * _Nonnull)access_token;
+ (void)clearAccessToken;
+ (BOOL)hasAccessToken SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Null_unspecified)getAccessToken SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LockController * _Null_unspecified lockController;)
+ (LockController * _Null_unspecified)lockController SWIFT_WARN_UNUSED_RESULT;
+ (void)setLockController:(LockController * _Null_unspecified)value;
+ (CLLocationManager * _Null_unspecified)makeLocationManager SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit8LockAdV1")
@interface LockAdV1 : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UserCommand : NSInteger;
@protocol LockConnectionServiceDelegate;
@protocol LockStatusDelegate;

SWIFT_CLASS("_TtC11LinkaAPIKit21LockConnectionService")
@interface LockConnectionService : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FACTORY_RESET_SETTING;)
+ (NSInteger)FACTORY_RESET_SETTING SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FACTORY_RESET_SETTING_DEFAULT_VALUE;)
+ (NSInteger)FACTORY_RESET_SETTING_DEFAULT_VALUE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FACTORY_RESET_SETTING_VALID_VALUE;)
+ (NSInteger)FACTORY_RESET_SETTING_VALID_VALUE SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) LockController * _Nullable lockController;
@property (nonatomic) double timeoutInterval;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LockConnectionService * _Nonnull sharedInstance;)
+ (LockConnectionService * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LockInfoPacket * _Null_unspecified lockInfoPacket;)
+ (LockInfoPacket * _Null_unspecified)lockInfoPacket SWIFT_WARN_UNUSED_RESULT;
+ (void)setLockInfoPacket:(LockInfoPacket * _Null_unspecified)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LockContextPacket * _Null_unspecified lockContextPacket;)
+ (LockContextPacket * _Null_unspecified)lockContextPacket SWIFT_WARN_UNUSED_RESULT;
+ (void)setLockContextPacket:(LockContextPacket * _Null_unspecified)value;
@property (nonatomic) enum UserCommand command;
@property (nonatomic) BOOL lockLocked;
@property (nonatomic) BOOL lockUnlocked;
@property (nonatomic) BOOL hasFoundDevice;
@property (nonatomic) BOOL alreadyHasLockController;
@property (nonatomic) BOOL DisableAutomaticDisconnect;
@property (nonatomic) NSInteger write_setting_unlocked_sleep;
@property (nonatomic) NSInteger write_setting_locked_sleep;
@property (nonatomic) NSInteger write_setting_pac;
@property (nonatomic) enum AudioSetting write_setting_audio;
- (void)setWrite_setting_audioWithWrite_setting_audio:(NSInteger)write_setting_audio;
- (void)setWrite_airplane_modeWithEnabled:(BOOL)enabled;
- (void)doRead_setting_audio;
- (void)doRead_airplane_mode;
- (void)doRead_setting_keyfob;
- (void)doRead_setting_unlock_sleep;
- (void)doRead_setting_lock_sleep;
- (void)doRead_setting_pac;
- (void)setWrite_setting_unlocked_sleepWithWrite_setting_unlocked_sleep:(NSInteger)write_setting_unlocked_sleep;
- (void)setWrite_setting_locked_sleepWithWrite_setting_locked_sleep:(NSInteger)write_setting_locked_sleep;
- (void)setWrite_setting_pacWithWrite_setting_pac:(NSInteger)write_setting_pac;
- (void)intialize;
- (BOOL)doLockWithNumberWithLockNum:(NSString * _Nonnull)lockNum delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doUnlockWithNumberWithLockNum:(NSString * _Nonnull)lockNum delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doQueryWithNumberWithLockNum:(NSString * _Nonnull)lockNum delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)checkIsConnected SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doLockWithMacAddress:(NSString * _Nonnull)macAddress delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doUnLockWithMacAddress:(NSString * _Nonnull)macAddress delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (void)setLockStatusDelegateWithDelegate:(id <LockStatusDelegate> _Nonnull)delegate;
- (void)factoryResetDeviceWithDelegate:(id <FactoryResetDelegate> _Nonnull)delegate;
- (void)assignKeyfobWithKeyfob_qr:(NSString * _Nonnull)keyfob_qr delegate:(id <KeyfobAssignDelegate> _Nonnull)delegate;
- (BOOL)unassignKeyfob SWIFT_WARN_UNUSED_RESULT;
- (void)tryAgainUnlock;
- (void)doSleep;
- (void)doSiren;
- (void)tryAgainLock;
- (BOOL)isCharging SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTether SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doQueryWithMacAddress:(NSString * _Nonnull)macAddress delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)linka_discover_delegate_instance SWIFT_WARN_UNUSED_RESULT;
- (void)disconnectWithExistingController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11LinkaAPIKit29LockConnectionServiceDelegate_")
@protocol LockConnectionServiceDelegate
/// MARK:- SUCCESS CALLBACKS
- (void)onPairingUp;
- (void)onPairingSuccess;
- (void)onScanFound;
- (void)onConnected;
- (void)onBatteryPercentWithBatteryPercent:(NSInteger)batteryPercent;
- (void)onUnlockStarted;
- (void)onLockStarted;
- (void)onLock;
- (void)onUnlock;
/// MARK:- ERROR CALLBACKS
- (void)errorInternetOff;
- (void)errorBluetoothOff;
- (void)errorAppNotInForeground;
- (void)errorInvalidAccessToken;
- (void)errorMacAddressWithErrorMsg:(NSString * _Nonnull)errorMsg;
- (void)errorConnectionTimeout;
- (void)errorScanningTimeout;
- (void)errorLockMovingWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
/// call tryAgainLock()
- (void)errorLockStallWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
/// call tryAgainLock()
- (void)errorLockJam;
- (void)errorUnexpectedDisconnect;
- (void)errorLockingTimeoutWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
/// call tryAgainLock()
- (void)errorUnlockingTimeoutWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
@optional
/// call tryAgainUnlock()
- (void)errorOtherWithCode:(enum ErrorOther)code;
@required
- (void)onQueryLockedWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)onQueryUnlockedWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit14LockDataPacket")
@interface LockDataPacket : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LinkaAPIKit17LockContextPacket")
@interface LockContextPacket : LockDataPacket
@end


SWIFT_CLASS("_TtC11LinkaAPIKit14LockController")
@interface LockController : NSObject <UIAlertViewDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11LinkaAPIKit14LockInfoPacket")
@interface LockInfoPacket : LockDataPacket
@end


SWIFT_CLASS("_TtC11LinkaAPIKit17LockSettingPacket")
@interface LockSettingPacket : LockDataPacket
@end


SWIFT_PROTOCOL("_TtP11LinkaAPIKit18LockStatusDelegate_")
@protocol LockStatusDelegate
@optional
- (void)onLockStatusPacketWithStatusPacket:(LockStatusPacket * _Nonnull)statusPacket;
- (void)onReadSettingUnlockedSleepWithSleep_time_seconds:(NSUInteger)sleep_time_seconds;
- (void)onReadSettingLockedSleepWithSleep_time_seconds:(NSUInteger)sleep_time_seconds;
- (void)onReadSettingAudioWithAudio:(NSUInteger)audio;
- (void)onReadSettingPacWithPac:(NSUInteger)pac;
- (void)onReadSettingKeyfobWithKeyfobId:(NSString * _Nonnull)keyfobId;
- (void)onReadAirplaneModeWithEnabled:(BOOL)enabled;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit16LockStatusPacket")
@interface LockStatusPacket : LockDataPacket
@end




SWIFT_CLASS("_TtC11LinkaAPIKit21StateTransitionReason")
@interface StateTransitionReason : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit11SystemFlags")
@interface SystemFlags : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






typedef SWIFT_ENUM(NSInteger, UserCommand, open) {
  UserCommandLock = 0,
  UserCommandUnLock = 1,
  UserCommandNone = 2,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
#ifndef LINKAAPIKIT_SWIFT_H
#define LINKAAPIKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LinkaAPIKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AudioSetting, open) {
  AudioSettingOff = 0,
  AudioSettingOn = 3,
  AudioSettingSiren2 = 4,
  AudioSettingSiren3 = 5,
  AudioSettingSiren_only = 1,
  AudioSettingTones_only = 2,
  AudioSettingNone = -1,
};


SWIFT_CLASS("_TtC11LinkaAPIKit21ConfigurationSettings")
@interface ConfigurationSettings : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, ErrorKeyfobAssign, open) {
  ErrorKeyfobAssignERROR_KEYFOB_INVALID = 21,
  ErrorKeyfobAssignERROR_KEYFOB_INTERNET = 23,
  ErrorKeyfobAssignERROR_KEYFOB_NOT_CONNECTED = 24,
};

typedef SWIFT_ENUM(NSUInteger, ErrorOther, open) {
  ErrorOtherERROR_LOCK_FACTORY_RESET = 11,
  ErrorOtherERROR_LOCK_KEY_ISSUE = 12,
};


SWIFT_PROTOCOL("_TtP11LinkaAPIKit20FactoryResetDelegate_")
@protocol FactoryResetDelegate
- (void)onFactoryResetComplete;
- (void)onFactoryResetErrorWithErrorCode:(NSInteger)errorCode;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit7Helpers")
@interface Helpers : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit15KeychainService")
@interface KeychainService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11LinkaAPIKit20KeyfobAssignDelegate_")
@protocol KeyfobAssignDelegate
- (void)onKeyfobAssignComplete;
- (void)onKeyfobAssignErrorWithErrorCode:(enum ErrorKeyfobAssign)errorCode;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit15LinkaAPIService")
@interface LinkaAPIService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CBPeripheral;
@class CBCharacteristic;
@class CBCentralManager;
@class NSString;
@class NSNumber;
@class CBService;

SWIFT_CLASS("_TtC11LinkaAPIKit22LinkaBLECentralManager")
@interface LinkaBLECentralManager : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didWriteValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central willRestoreState:(NSDictionary<NSString *, id> * _Nonnull)dict;
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscoverPeripheral:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData RSSI:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnectPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverDescriptorsForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateNotificationStateForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didReadRSSI:(NSNumber * _Nonnull)RSSI error:(NSError * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LockStatusPacket;
@class NSError;
@class LockSettingPacket;
@class LockContextPacket;
@class LockInfoPacket;
@class UIView;

SWIFT_CLASS("_TtC11LinkaAPIKit28LinkaBLECommunicationManager")
@interface LinkaBLECommunicationManager : NSObject <CLLocationManagerDelegate>
- (double)getFwVersionNumber SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) CBPeripheral * _Null_unspecified peripheral;
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockStatusPacket_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockSettingPacket_API)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockContextPacket_API)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockInfoPacket_API)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockTamperWarning_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryLowWarning_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryCriticallyLowWarning_API)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchFirmwareVersion_API)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onLockBlocked_API)(CBPeripheral * _Nonnull);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockStatusPacket)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockSettingPacket)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockContextPacket)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockInfoPacket)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockTamperWarning)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryLowWarning)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onFetchLockBatteryCriticallyLowWarning)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified onLockSettled)(void);
@property (nonatomic, copy) NSString * _Nonnull output;
@property (nonatomic) BOOL isButtonUsedForLocking;
@property (nonatomic) BOOL uptimePacketDidChange;
@property (nonatomic) BOOL isEncryptionCounterValid;
- (nonnull instancetype)initWithIsDebug:(BOOL)isDebug view:(UIView * _Null_unspecified)view OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithIsDebug:(BOOL)isDebug view:(UIView * _Null_unspecified)view masterKey:(NSArray<NSNumber *> * _Null_unspecified)masterKey keyIndex:(NSUInteger)keyIndex OBJC_DESIGNATED_INITIALIZER;
- (void)startCommunicationWithPeripheral:(CBPeripheral * _Nonnull)peripheral onFetchLockStatusPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockStatusPacket_API onFetchLockSettingPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable))onFetchLockSettingPacket_API onFetchLockContextPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable))onFetchLockContextPacket_API onFetchLockInfoPacket_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable))onFetchLockInfoPacket_API onFetchLockTamperWarning_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockTamperWarning_API onFetchLockBatteryLowWarning_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryLowWarning_API onFetchLockBatteryCriticallyLowWarning_API:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryCriticallyLowWarning_API onFetchFirmwareVersion_API:(void (^ _Null_unspecified)(NSString * _Nonnull))onFetchFirmwareVersion_API onFetchLockStatusPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockStatusPacket onFetchLockSettingPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockSettingPacket * _Nullable, NSError * _Nullable))onFetchLockSettingPacket onFetchLockContextPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockContextPacket * _Nullable, NSError * _Nullable))onFetchLockContextPacket onFetchLockInfoPacket:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockInfoPacket * _Nullable, NSError * _Nullable))onFetchLockInfoPacket onFetchLockTamperWarning:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockTamperWarning onFetchLockBatteryLowWarning:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryLowWarning onFetchLockBatteryCriticallyLowWarning:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, LockStatusPacket * _Nullable, NSError * _Nullable))onFetchLockBatteryCriticallyLowWarning onLockSettled:(void (^ _Null_unspecified)(void))onLockSettled;
- (void)stopCommunication;
- (BOOL)doAction_SetUnlockedBumpThresholdWithShouldAllowLockingMovement:(NSInteger)shouldAllowLockingMovement SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Bond SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Lock SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Unlock SWIFT_WARN_UNUSED_RESULT;
- (void)clearEncryptedPacketQueue;
- (BOOL)doAction_setTrackDurationWithDuration:(NSInteger)duration SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_setFactorySetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_readFactorySetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_StartTracking SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_StatePing SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_StopTracking SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_Off SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_Gps SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_Conn SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_On SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ATC_SetupLte SWIFT_WARN_UNUSED_RESULT;
- (void)clearLog;
- (BOOL)doAction_DefaultSettings SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_FwUpg SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Authenticate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ReadAudioSetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doRead_GpsOffSetting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ReadKeyfob SWIFT_WARN_UNUSED_RESULT;
- (void)doAction_WriteKeyfobWithKeyfob:(uint64_t)keyfob uuid0:(uint64_t)uuid0 uuid1:(uint64_t)uuid1 major:(NSInteger)major minor:(NSInteger)minor;
- (void)doReadOperatorSettings;
- (BOOL)doAction_WriteAudioSettingWithSetting:(NSInteger)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Tune SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_Sleep SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_ResetReboot SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetPasscode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPasscodeWithPasscode:(NSString * _Nonnull)passcode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetLockSleep SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLockSleepWithSleepSeconds:(NSString * _Nonnull)sleepSeconds SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetUnlockedDisconnectedSleep SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockedDisconnectedSleepWithSleepSeconds:(NSString * _Nonnull)sleepSeconds SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetTheftIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetTheftDurationWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLockIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLoopControlWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGnssModeWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGnssFilterWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetStatePingWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetFullGpsWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockBatteryWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetLockBatteryWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetDisconnectedLockWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetNetworkCodeWithSetting:(NSInteger)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetIpAddressWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteCommandsWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetpowerButtonPingWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetTetherWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockedMovementWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetUnlockedDurationWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetMusicalTonesWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteConnectStartWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteConnectEndWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetRemoteConnectDowWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetMotorSpeedWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetModemTypeWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetVolumeWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGpsOffBatteryPercentWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetAssistNowWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodAIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodBIntervalWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodAStartWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetPeriodBStartWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetSleepBatteryWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetAutolockWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_SetGeoblockWithSetting:(NSString * _Nonnull)setting SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_GetActuations SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_deleteAllBondsWithCallback:(BOOL (^ _Null_unspecified)(BOOL))callback SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_stop SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_siren SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_stopSiren SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doAction_activate SWIFT_WARN_UNUSED_RESULT;
- (void)emptyEncryptedSettingsQueue;
- (void)processEncryptionSettingsQueue;
- (id _Nonnull)linka_delegate_instance SWIFT_WARN_UNUSED_RESULT;
- (void)onBLEPoweredOn;
- (void)onBLEPoweredOff;
- (void)onConnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onDisconnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onFailToConnectPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralObjectWithPeripheral:(CBPeripheral * _Nonnull)peripheral RSSI:(NSNumber * _Null_unspecified)RSSI error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralServicesWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onCreateNotificationForPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic isConnected:(BOOL)isConnected;
- (void)onRefreshPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LinkaAPIKit22LinkaBLEConnectManager")
@interface LinkaBLEConnectManager : NSObject
@property (nonatomic, strong) CBPeripheral * _Null_unspecified peripheral;
@property (nonatomic, strong) LinkaBLECentralManager * _Null_unspecified manager;
@property (nonatomic, copy) void (^ _Null_unspecified callback_API)(CBPeripheral * _Nonnull, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnLostConnection_API)(CBPeripheral * _Nonnull, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnReadRSSI_API)(CBPeripheral * _Nonnull, NSNumber * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnLostConnection)(CBPeripheral * _Nonnull, NSError * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callbackOnReadRSSI)(CBPeripheral * _Nonnull, NSNumber * _Nullable);
@property (nonatomic, copy) void (^ _Null_unspecified callback)(CBPeripheral * _Nonnull, NSError * _Nullable);
- (void)startConnectWithPeripheral:(CBPeripheral * _Nonnull)peripheral callback:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, NSError * _Nullable))callback callbackOnLostConnection:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, NSError * _Nullable))callbackOnLostConnection callbackOnReadRSSI:(void (^ _Null_unspecified)(CBPeripheral * _Nonnull, NSNumber * _Nullable))callbackOnReadRSSI;
- (void)startDisconnectWithPeripheral:(CBPeripheral * _Nonnull)peripheral callback:(void (^ _Nonnull)(CBPeripheral * _Nonnull, NSError * _Nullable))callback;
- (void)stopCommunication;
- (void)kill;
- (void)startRoutine;
- (void)nextRoutine;
- (BOOL)connect SWIFT_WARN_UNUSED_RESULT;
- (BOOL)discoverServices SWIFT_WARN_UNUSED_RESULT;
- (BOOL)discoverCharacteristics SWIFT_WARN_UNUSED_RESULT;
- (BOOL)readRSSI SWIFT_WARN_UNUSED_RESULT;
- (BOOL)disconnect SWIFT_WARN_UNUSED_RESULT;
- (void)done;
- (id _Nonnull)linka_delegate_instance SWIFT_WARN_UNUSED_RESULT;
- (void)onBLEPoweredOn;
- (void)onBLEPoweredOff;
- (void)onConnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onDisconnectToPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onFailToConnectPeripheralWithPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralObjectWithPeripheral:(CBPeripheral * _Nonnull)peripheral RSSI:(NSNumber * _Null_unspecified)RSSI error:(NSError * _Nullable)error;
- (void)onRefreshPeripheralServicesWithPeripheral:(CBPeripheral * _Nonnull)peripheral;
- (void)onCreateNotificationForPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic isConnected:(BOOL)isConnected;
- (void)onRefreshPeripheralCharacteristicWithPeripheral:(CBPeripheral * _Nonnull)peripheral characteristic:(CBCharacteristic * _Nonnull)characteristic;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit24LinkaBLEPairingUpManager")
@interface LinkaBLEPairingUpManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LockController;
@class CLLocationManager;

SWIFT_CLASS("_TtC11LinkaAPIKit23LinkaMerchantAPIService")
@interface LinkaMerchantAPIService : NSObject
+ (void)saveAccessToken:(NSString * _Nonnull)access_token;
+ (void)clearAccessToken;
+ (BOOL)hasAccessToken SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Null_unspecified)getAccessToken SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LockController * _Null_unspecified lockController;)
+ (LockController * _Null_unspecified)lockController SWIFT_WARN_UNUSED_RESULT;
+ (void)setLockController:(LockController * _Null_unspecified)value;
+ (CLLocationManager * _Null_unspecified)makeLocationManager SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit8LockAdV1")
@interface LockAdV1 : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum UserCommand : NSInteger;
@protocol LockConnectionServiceDelegate;
@protocol LockStatusDelegate;

SWIFT_CLASS("_TtC11LinkaAPIKit21LockConnectionService")
@interface LockConnectionService : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FACTORY_RESET_SETTING;)
+ (NSInteger)FACTORY_RESET_SETTING SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FACTORY_RESET_SETTING_DEFAULT_VALUE;)
+ (NSInteger)FACTORY_RESET_SETTING_DEFAULT_VALUE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger FACTORY_RESET_SETTING_VALID_VALUE;)
+ (NSInteger)FACTORY_RESET_SETTING_VALID_VALUE SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) LockController * _Nullable lockController;
@property (nonatomic) double timeoutInterval;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LockConnectionService * _Nonnull sharedInstance;)
+ (LockConnectionService * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LockInfoPacket * _Null_unspecified lockInfoPacket;)
+ (LockInfoPacket * _Null_unspecified)lockInfoPacket SWIFT_WARN_UNUSED_RESULT;
+ (void)setLockInfoPacket:(LockInfoPacket * _Null_unspecified)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) LockContextPacket * _Null_unspecified lockContextPacket;)
+ (LockContextPacket * _Null_unspecified)lockContextPacket SWIFT_WARN_UNUSED_RESULT;
+ (void)setLockContextPacket:(LockContextPacket * _Null_unspecified)value;
@property (nonatomic) enum UserCommand command;
@property (nonatomic) BOOL lockLocked;
@property (nonatomic) BOOL lockUnlocked;
@property (nonatomic) BOOL hasFoundDevice;
@property (nonatomic) BOOL alreadyHasLockController;
@property (nonatomic) BOOL DisableAutomaticDisconnect;
@property (nonatomic) NSInteger write_setting_unlocked_sleep;
@property (nonatomic) NSInteger write_setting_locked_sleep;
@property (nonatomic) NSInteger write_setting_pac;
@property (nonatomic) enum AudioSetting write_setting_audio;
- (void)setWrite_setting_audioWithWrite_setting_audio:(NSInteger)write_setting_audio;
- (void)setWrite_airplane_modeWithEnabled:(BOOL)enabled;
- (void)doRead_setting_audio;
- (void)doRead_airplane_mode;
- (void)doRead_setting_keyfob;
- (void)doRead_setting_unlock_sleep;
- (void)doRead_setting_lock_sleep;
- (void)doRead_setting_pac;
- (void)setWrite_setting_unlocked_sleepWithWrite_setting_unlocked_sleep:(NSInteger)write_setting_unlocked_sleep;
- (void)setWrite_setting_locked_sleepWithWrite_setting_locked_sleep:(NSInteger)write_setting_locked_sleep;
- (void)setWrite_setting_pacWithWrite_setting_pac:(NSInteger)write_setting_pac;
- (void)intialize;
- (BOOL)doLockWithNumberWithLockNum:(NSString * _Nonnull)lockNum delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doUnlockWithNumberWithLockNum:(NSString * _Nonnull)lockNum delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doQueryWithNumberWithLockNum:(NSString * _Nonnull)lockNum delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)checkIsConnected SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doLockWithMacAddress:(NSString * _Nonnull)macAddress delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doUnLockWithMacAddress:(NSString * _Nonnull)macAddress delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (void)setLockStatusDelegateWithDelegate:(id <LockStatusDelegate> _Nonnull)delegate;
- (void)factoryResetDeviceWithDelegate:(id <FactoryResetDelegate> _Nonnull)delegate;
- (void)assignKeyfobWithKeyfob_qr:(NSString * _Nonnull)keyfob_qr delegate:(id <KeyfobAssignDelegate> _Nonnull)delegate;
- (BOOL)unassignKeyfob SWIFT_WARN_UNUSED_RESULT;
- (void)tryAgainUnlock;
- (void)doSleep;
- (void)doSiren;
- (void)tryAgainLock;
- (BOOL)isCharging SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTether SWIFT_WARN_UNUSED_RESULT;
- (BOOL)doQueryWithMacAddress:(NSString * _Nonnull)macAddress delegate:(id <LockConnectionServiceDelegate> _Nullable)delegate SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)linka_discover_delegate_instance SWIFT_WARN_UNUSED_RESULT;
- (void)disconnectWithExistingController;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11LinkaAPIKit29LockConnectionServiceDelegate_")
@protocol LockConnectionServiceDelegate
/// MARK:- SUCCESS CALLBACKS
- (void)onPairingUp;
- (void)onPairingSuccess;
- (void)onScanFound;
- (void)onConnected;
- (void)onBatteryPercentWithBatteryPercent:(NSInteger)batteryPercent;
- (void)onUnlockStarted;
- (void)onLockStarted;
- (void)onLock;
- (void)onUnlock;
/// MARK:- ERROR CALLBACKS
- (void)errorInternetOff;
- (void)errorBluetoothOff;
- (void)errorAppNotInForeground;
- (void)errorInvalidAccessToken;
- (void)errorMacAddressWithErrorMsg:(NSString * _Nonnull)errorMsg;
- (void)errorConnectionTimeout;
- (void)errorScanningTimeout;
- (void)errorLockMovingWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
/// call tryAgainLock()
- (void)errorLockStallWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
/// call tryAgainLock()
- (void)errorLockJam;
- (void)errorUnexpectedDisconnect;
- (void)errorLockingTimeoutWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
/// call tryAgainLock()
- (void)errorUnlockingTimeoutWithTryAgainCompletion:(void (^ _Nonnull)(BOOL))tryAgainCompletion;
@optional
/// call tryAgainUnlock()
- (void)errorOtherWithCode:(enum ErrorOther)code;
@required
- (void)onQueryLockedWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
- (void)onQueryUnlockedWithCompletionHandler:(void (^ _Nonnull)(BOOL))completionHandler;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit14LockDataPacket")
@interface LockDataPacket : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC11LinkaAPIKit17LockContextPacket")
@interface LockContextPacket : LockDataPacket
@end


SWIFT_CLASS("_TtC11LinkaAPIKit14LockController")
@interface LockController : NSObject <UIAlertViewDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11LinkaAPIKit14LockInfoPacket")
@interface LockInfoPacket : LockDataPacket
@end


SWIFT_CLASS("_TtC11LinkaAPIKit17LockSettingPacket")
@interface LockSettingPacket : LockDataPacket
@end


SWIFT_PROTOCOL("_TtP11LinkaAPIKit18LockStatusDelegate_")
@protocol LockStatusDelegate
@optional
- (void)onLockStatusPacketWithStatusPacket:(LockStatusPacket * _Nonnull)statusPacket;
- (void)onReadSettingUnlockedSleepWithSleep_time_seconds:(NSUInteger)sleep_time_seconds;
- (void)onReadSettingLockedSleepWithSleep_time_seconds:(NSUInteger)sleep_time_seconds;
- (void)onReadSettingAudioWithAudio:(NSUInteger)audio;
- (void)onReadSettingPacWithPac:(NSUInteger)pac;
- (void)onReadSettingKeyfobWithKeyfobId:(NSString * _Nonnull)keyfobId;
- (void)onReadAirplaneModeWithEnabled:(BOOL)enabled;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit16LockStatusPacket")
@interface LockStatusPacket : LockDataPacket
@end




SWIFT_CLASS("_TtC11LinkaAPIKit21StateTransitionReason")
@interface StateTransitionReason : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11LinkaAPIKit11SystemFlags")
@interface SystemFlags : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






typedef SWIFT_ENUM(NSInteger, UserCommand, open) {
  UserCommandLock = 0,
  UserCommandUnLock = 1,
  UserCommandNone = 2,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
